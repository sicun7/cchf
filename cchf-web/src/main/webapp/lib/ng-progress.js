angular.module("ng-progress",[]),angular.module("ng-progress").directive("ngHttpProgress",["$rootScope","$interval","$timeout","$http","$httpProgressOps",function(t,e,n,r,s){return{restrict:"E",scope:{},template:'<div id="progress" style="width: {{ width + \'%\'}}; background : {{background}}" ng-show="visible"><dt style="box-shadow: {{background}} 1px 0 6px 1px;"></dt><dd style="box-shadow: {{background}} 1px 0 6px 1px;"></dd></div>',replace:!0,link:function(o,i,a){var u=s.http,d=s.background,g=s.startAt,p=s.autoPauseAt,h=s.duration,c=s.increment,l=null,$=!1;if(g>=p)throw new Error("Angular $http Progress : startAt value must be less than autoPauseAt value");o.visible=!1,o.width=0,o.background=d,t.$on("$httpProgressStart",function(){o.visible||(o.visible=!0),l&&e.cancel(l),n(function(){0==$&&($=!0,o.width=g),l=e(function(){o.width>=p?t.$emit("$httpProgressPause"):o.width=o.width+c},h)})}),t.$on("$httpProgressPause",function(){e.cancel(l),i.addClass("waiting")}),t.$on("$httpProgressResume",function(){i.removeClass("waiting"),t.$emit("$httpProgressStart")}),t.$on("$httpProgressRestart",function(){i.removeClass("done waiting"),o.width=0,$=!1,t.$emit("$httpProgressStart")}),t.$on("$httpProgressStop",function(){e.cancel(l),n(function(){o.width=100,n(function(){i.addClass("done").removeClass("waiting"),n(function(){i.removeClass("done"),o.width=0,o.visible=!1,$=!1},500)},300)})}),o.$watch(function(){return r.pendingRequests.length>0},function(e){u&&(e?t.$emit("$httpProgressStart"):t.$emit("$httpProgressStop"))})}}}]),angular.module("ng-progress").provider("$httpProgressOps",function(){var t={http:!0,background:"#b91f1f",startAt:0,autoPauseAt:90,duration:1e3,increment:5};return{setOps:function(e){angular.extend(t,e)},$get:function(){return t}}}),angular.module("ng-progress").run(["$document",function(t){0==t.find("#progress").length&&t.find("body").append("<ng-http-progress></ng-http-progress>")}]);
//# sourceMappingURL=ng-http-progress.min.js.map
